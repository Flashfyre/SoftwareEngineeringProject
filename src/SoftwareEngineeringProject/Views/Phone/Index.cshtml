@model PhoneModel

@inject UserManager<ApplicationUser> userManager
@inject SavedPhoneModelRepository savedPhoneModels

@{
    ViewData["Title"] = Model.PhoneModelID + " - Details";

    ApplicationUser user = await userManager.GetUserAsync(Context.User);
    bool isPhoneInWishlist = user != null && savedPhoneModels.GetAllForUserID(user.Id).Any(spm => spm.PhoneModelID == Model.PhoneModelID);
    IEnumerable<VendorPhone> vendorPhones = Model.Phones.SelectMany(p => p.VendorPhones);
    IEnumerable<string> carrierIDOptions = vendorPhones.Select(vp => vp.CarrierID).Distinct();
    IEnumerable<string> vendorIDOptions = vendorPhones.Select(vp => vp.VendorID).Distinct();
    Dictionary<string, List<string>> carrierPaymentOptions = new Dictionary<string, List<string>>();
    Dictionary<string, List<string>> carrierMemoryOptions = new Dictionary<string, List<string>>();
    Dictionary<string, List<string>> carrierColourOptions = new Dictionary<string, List<string>>();

    foreach (VendorPhone vp in vendorPhones)
    {
        if (!carrierPaymentOptions.ContainsKey(vp.PaymentType)) {
            carrierPaymentOptions.Add(vp.PaymentType, new List<string>() { vp.CarrierID });
        } else if (!carrierPaymentOptions.Keys.Contains(vp.PaymentType))
        {
            carrierPaymentOptions[vp.PaymentType].Add(vp.CarrierID);
        }
        if (!carrierMemoryOptions.ContainsKey(vp.Phone.Memory))
        {
            carrierMemoryOptions.Add(vp.Phone.Memory, new List<string>() { vp.CarrierID });
        }
        else if (!carrierMemoryOptions.Keys.Contains(vp.Phone.Memory))
        {
            carrierMemoryOptions[vp.Phone.Memory].Add(vp.CarrierID);
        }
        if (!carrierColourOptions.ContainsKey(vp.Phone.Colour))
        {
            carrierColourOptions.Add(vp.Phone.Colour, new List<string>() { vp.CarrierID });
        }
        else if (!carrierColourOptions.Keys.Contains(vp.Phone.Colour))
        {
            carrierColourOptions[vp.Phone.Colour].Add(vp.CarrierID);
        }
    }
}

<link href="~/css/phone.css" rel="stylesheet" type="text/css" />

<script type="text/javascript">
    $(document).ready(function() {
        $("#phone-carrier-select").change(function () {
            var carrierID = $(this).val();
            $("option[data-carrier-ids]").each(function () {
                $(this).prop("disabled", $(this).data("carrier-ids").split(",").indexOf(carrierID) == -1);
            });

            $("#phone-payment-option-select, phone-memory-select, phone-colour-select").each(function () {
                if ($(this).children(":selected").prop("disabled"))
                    $(this).val($(this).children(":first-child").html());
            });
        });

        $(".btn-wishlist:not(.disabled)").click(function () {
            var isUndo = $(this).is(".btn-wishlist.undo"); // Whether the button is removing from the wishlist

            $(".btn-wishlist").addClass("disabled"); // Disable the wishlist button

            $.ajax({
                type: "POST",
                url: '/Wishlist/' + (!isUndo ? "AddTo" : "RemoveFrom") + 'Wishlist',
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                data: {
                    phoneModelID: '@Model.PhoneModelID',
                    __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val()

                },
                dataType: "json",
                success: function (data) {
                    if (data[0]) // If the operation succeeded, change the button to its opposite
                        $(".btn-wishlist").toggleClass("undo").toggleClass("btn-success").toggleClass("btn-danger").html((isUndo ? "Add to" : "Remove from") + " My Wishlist");
                    if (data[1] != null)
                        alert(data[1]); // Display an error message if necessary
                    $(".btn-wishlist").removeClass("disabled"); // Re-enable the wishlist button
                },
                error: function () {
                    alert("An error occurred while attempting to " + (!isUndo ? "add" : "remove") + " the phone " + (!isUndo ? "to" : "from") + " your wishlist.");
                    $(".btn-wishlist").removeClass("disabled"); // Re-enable the wishlist button
                }
            });
        });
    });
</script>

<div class="row">
    <h2>@Model.PhoneModelID</h2>
    <hr />
    <div id="phone-image-container" class="col-md-3">
        <img style="width:100%; height:auto;" src="@Model.Phones.First().GetImageURL()" />
        @if (!isPhoneInWishlist)
        {
            <button class="btn btn-success btn-block btn-wishlist@{ @Html.Raw(user == null ? " disabled" : ""); }">Add to My Wishlist</button>
        }
        else
        {
            <button class="btn btn-danger btn-block btn-wishlist undo@{ @Html.Raw(user == null ? " disabled" : ""); }">Remove from My Wishlist</button>
        }
        @Html.AntiForgeryToken()
    </div>
    <div class="col-md-9">
        <h2>Price Comparison</h2>
        <hr />
        <div class="col-md-6">
            <h4>Details</h4>
            <br />
            <span>
                Carrier
                <select id="phone-carrier-select" class="form-control">
                    <option>--Carrier--</option>
                    @foreach (string carrierID in carrierIDOptions)
                    {
                        <option>@carrierID</option>
                    }
                </select>
            </span>
            <br />
            <span>
                Payment Option
                <select id="phone-payment-option-select" class="form-control">
                    <option>--Payment Option--</option>
                    @foreach (string payment in carrierPaymentOptions.Keys.OrderBy(p => p))
                    {
                        <option data-carrier-ids="@string.Join(",", carrierPaymentOptions[payment].ToArray())" value="@payment" disabled>@payment</option>
                    }
                </select>
            </span>
            <br />
            <span>
                Internal Memory
                <select id="phone-memory-select" class="form-control">
                    <option>--Internal Memory--</option> 
                    @foreach (string memory in carrierMemoryOptions.Keys.OrderBy(m => FormatHelper.PadNumbers(m)))
                    {
                        <option data-carrier-ids="@string.Join(",", carrierMemoryOptions[memory].ToArray())" value="@memory" disabled>@memory</option>
                    }
                </select>
            </span>
            <br />
            <span>
                Colour
                <select id="phone-colour-select" class="form-control">
                    <option>--Colour--</option>
                    @foreach (string colour in carrierColourOptions.Keys.OrderBy(c => c))
                    {
                        <option data-carrier-ids="@string.Join(",", carrierColourOptions[colour].ToArray())" value="@colour" disabled>@colour</option>
                    }
                </select>
            </span>
        </div>
        <div class="col-md-6">
            <p>Vendors</p>
            <table id="phone-vendors-table" style="border: 1px solid black;">
                <tr>
                    <td><a href="javascript:void(0)">Rogers.ca</a></td>
                    <td>2 year contract</td>
                    <td>$199.99</td>
                </tr>
                <tr>
                    <td><a href="javascript:void(0)">Walmart.ca</a></td>
                    <td>2 year contract</td>
                    <td>$249.99</td>
                </tr>
                <tr>
                    <td><a href="javascript:void(0)">Bestbuy.ca</a></td>
                    <td>1 year contract</td>
                    <td>$349.99</td>
                </tr>
                <tr>
                    <td><a href="javascript:void(0)">Amazon.ca</a></td>
                    <td>1 year contract </td>
                    <td>$299.99 </td>
                </tr>
            </table>
        </div>
    </div>
</div>
<div class="row">
    <h3>Specifications</h3>
    <hr />
    @Html.Raw(ViewData["Description"])
</div>